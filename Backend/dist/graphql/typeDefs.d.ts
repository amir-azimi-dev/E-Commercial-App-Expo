declare const typeDefs = "#graphql\n    scalar Date,\n\n    #graphql\n    type User {\n        _id: ID!,\n        name: String!,\n        email: String!,\n        phone: String!,\n        isAdmin: String!,\n        street: String,\n        apartment: String,\n        city: String,\n        zip: String,\n        country: String,\n        createdAt: Date!,\n        updatedAt: Date!\n    }\n\n    #graphql\n    type Auth {\n        user: User!,\n        token: String!\n    }\n\n    #graphql\n    type Product {\n        _id: ID!,\n        title: String!,\n        description: String!,\n        richDescription: String,\n        image: String,\n        images: [String!],\n        brand: String,\n        price: Float!,\n        category: Category!,\n        countInStock: Int!,\n        rating: Int,\n        reviewsCount: Int,\n        isFeatured: Boolean,\n        createdAt: Date!,\n        updatedAt: Date!\n    }\n\n    #graphql\n    type Category {\n        _id: ID!,\n        title: String!,\n        color: String!,\n        icon: String,\n        image: String,\n        createdAt: Date!,\n        updatedAt: Date!\n    }\n\n    #graphql\n    type Statistics {\n        productsCount: Int!,\n        usersCount: Int!,\n        categoriesCount: Int!,\n        ordersCount: Int!,\n        totalSales: Float!\n    }\n\n    #graphql\n    type Order {\n        _id: ID!,\n        orderItems: [OrderItem!]!,\n        status: String!,\n        totalPrice: Float!,\n        customer: User!,\n        shippingAddress1: String!,\n        shippingAddress2: String,\n        phone: String!,\n        city: String!,\n        zip: String!,\n        country: String!,\n        createdAt: Date!,\n        updatedAt: Date!\n    }\n\n    type OrderItem {\n        _id: ID!,\n        product: Product!,\n        quantity: Int!,\n        createdAt: Date!,\n        updatedAt: Date!\n    }\n\n    input OrderItemInput {\n        product: ID!,\n        quantity: Int!\n    }\n\n\n    type Query {\n        getUsers: [User!]!,\n        getUser(id: ID!): User,\n        getMe: User,\n\n        getProducts(count: Int, categories: [String!], onlyFeaturedProducts: Boolean): [Product!]!,\n\n        getCategories: [Category!]!,\n        getCategory(id: ID!): Category,\n\n        getStatistics: Statistics!,\n\n        getOrders: [Order!]!,\n        getOrder(id: ID!): Order,\n        getUserOrders: [Order!]!,\n    }\n\n    type Mutation {\n        registerUser(name: String!, email: String!, password: String!, phone: String!, street: String, apartment: String, city: String, zip: String, country: String): Auth,\n        loginUser(identifier: String!, password: String!): Auth,\n        removeUser(id: ID!): User,\n\n        createProduct(title: String!, description: String!, richDescription: String, image: String, images: [String!], brand: String, price: Float!, category: ID!, countInStock: Int!, rating: Int, reviewsCount: Int, isFeatured: Boolean): Product,\n        editProduct(id: ID!, title: String!, description: String!, richDescription: String, image: String, images: [String!], brand: String, price: Float!, category: ID!, countInStock: Int!, rating: Int, reviewsCount: Int, isFeatured: Boolean): Product,\n        removeProduct(id: ID!): Product,\n\n        createCategory(title: String!, color: String!, icon: String, image: String): Category,\n        editCategory(id: ID!, title: String!, color: String!, icon: String, image: String): Category,\n        removeCategory(id: ID!): Category,\n\n        placeOrder(orderItems: [OrderItemInput!]!, shippingAddress1: String!, shippingAddress2: String, phone: String!, city: String!, zip: String!, country: String!): Order,\n        updateOrderStatus(id: ID!, newStatus: String): Order,\n        removeOrder(id: ID!): Order,\n    }\n";
export default typeDefs;
//# sourceMappingURL=typeDefs.d.ts.map